@inject Services.GrabCurrentUserIDService userIDService
@inject NavigationManager navManager
@inject Services.DifficultyService difficultyService
@inject Services.WelcomeService welcomeService

<AuthorizeView Roles="Admin, Normal">



    <Authorized>

        @if (context.User.IsInRole("Admin"))
        {
            isUserAdmin = true;
        }


        @if (context.User.Identity.Name != null)
        {
            userIDService.CurrentUserEmail = context.User.Identity.Name;
            
            
        }
         

        <div style="text-align: center; background-color: black; position: fixed; width: 100%; z-index: 100;  background-image: url(imgs/cce82af5d54bf21dd8a820df0e5d07f3.jpg)">
            <a href="Identity/Account/Manage">Hello, @context.User.Identity.Name!</a>
            <i @onclick="@( () => navManager.NavigateTo("/", true) )" id="goHomeIcon" class="fas fa-home nav-item" style="font-size:1.5em;"></i>
            <i  @onclick="@( () => navManager.NavigateTo("/history", true) )" id="goHomeIcon" class="fa fa-list-alt nav-item" style="font-size:1.5em; display:@( isUserAdmin == true ? "" : "none")"></i>

            <form method="post" action="Identity/Account/LogOut" class="text-center" style="font-family: 'Microsoft Sans Serif'; color: white;">
                <button type="submit" class="nav-link btn btn-link" style="margin-left: auto; margin-right: auto; position: relative; font-family:'Segoe Print'; color: white;">Log out</button>
            </form>


        </div>
    </Authorized>


    <NotAuthorized>
        <div class="fixed-top" style="background-color: black; color:white; font-size:2em; font-family: WRESTLEMANIA; text-align:center;">

            <a href="Identity/Account/Login">Log in</a>
            <span style="opacity:0;">|</span>
            <a href="Identity/Account/Register">Register</a>
            <span style="opacity:0;">|</span>
            <a id="guestText" style="color: gold;" @onclick="@(handleGuestPlay)">Play as Guest</a>


        </div>
    </NotAuthorized>
</AuthorizeView>















<style>


    #goHomeIcon{
        color: gold;
    }

    #goHomeIcon:hover{

        color: seagreen;
        transition: all 0.5s ease-in-out;

    }


    #guestText:hover {
        font-size: 4em;
        transition: all 2s ease-in-out;
        animation-play-state: running;
        opacity: 2;
        border: 4px solid red;
    }

    a {
        color: gold;
        font-family: WRESTLEMANIA;
        font-size: 2em;
    }
</style>






@code {

    void handleGuestPlay()
    {
        welcomeService.wasMenuClicked = true;
        userIDService.isUserGuest = true;
        navManager.NavigateTo("/difficulty");



    }

    bool isUserAdmin = false;


    private bool collapseNavMenu = true;

    bool areLinksVisible = false;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        areLinksVisible = !areLinksVisible;
    }







}